{"ast":null,"code":"\"use strict\";\n\n/**\n *  A fundamental building block of Ethereum is the underlying\n *  cryptographic primitives.\n *\n *  @_section: api/crypto:Cryptographic Functions   [about-crypto]\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.lock = exports.Signature = exports.SigningKey = exports.scryptSync = exports.scrypt = exports.pbkdf2 = exports.sha512 = exports.sha256 = exports.ripemd160 = exports.keccak256 = exports.randomBytes = exports.computeHmac = void 0;\nnull;\n// We import all these so we can export lock()\nconst hmac_js_1 = require(\"./hmac.js\");\nObject.defineProperty(exports, \"computeHmac\", {\n  enumerable: true,\n  get: function () {\n    return hmac_js_1.computeHmac;\n  }\n});\nconst keccak_js_1 = require(\"./keccak.js\");\nObject.defineProperty(exports, \"keccak256\", {\n  enumerable: true,\n  get: function () {\n    return keccak_js_1.keccak256;\n  }\n});\nconst ripemd160_js_1 = require(\"./ripemd160.js\");\nObject.defineProperty(exports, \"ripemd160\", {\n  enumerable: true,\n  get: function () {\n    return ripemd160_js_1.ripemd160;\n  }\n});\nconst pbkdf2_js_1 = require(\"./pbkdf2.js\");\nObject.defineProperty(exports, \"pbkdf2\", {\n  enumerable: true,\n  get: function () {\n    return pbkdf2_js_1.pbkdf2;\n  }\n});\nconst random_js_1 = require(\"./random.js\");\nObject.defineProperty(exports, \"randomBytes\", {\n  enumerable: true,\n  get: function () {\n    return random_js_1.randomBytes;\n  }\n});\nconst scrypt_js_1 = require(\"./scrypt.js\");\nObject.defineProperty(exports, \"scrypt\", {\n  enumerable: true,\n  get: function () {\n    return scrypt_js_1.scrypt;\n  }\n});\nObject.defineProperty(exports, \"scryptSync\", {\n  enumerable: true,\n  get: function () {\n    return scrypt_js_1.scryptSync;\n  }\n});\nconst sha2_js_1 = require(\"./sha2.js\");\nObject.defineProperty(exports, \"sha256\", {\n  enumerable: true,\n  get: function () {\n    return sha2_js_1.sha256;\n  }\n});\nObject.defineProperty(exports, \"sha512\", {\n  enumerable: true,\n  get: function () {\n    return sha2_js_1.sha512;\n  }\n});\nvar signing_key_js_1 = require(\"./signing-key.js\");\nObject.defineProperty(exports, \"SigningKey\", {\n  enumerable: true,\n  get: function () {\n    return signing_key_js_1.SigningKey;\n  }\n});\nvar signature_js_1 = require(\"./signature.js\");\nObject.defineProperty(exports, \"Signature\", {\n  enumerable: true,\n  get: function () {\n    return signature_js_1.Signature;\n  }\n});\n/**\n *  Once called, prevents any future change to the underlying cryptographic\n *  primitives using the ``.register`` feature for hooks.\n */\nfunction lock() {\n  hmac_js_1.computeHmac.lock();\n  keccak_js_1.keccak256.lock();\n  pbkdf2_js_1.pbkdf2.lock();\n  random_js_1.randomBytes.lock();\n  ripemd160_js_1.ripemd160.lock();\n  scrypt_js_1.scrypt.lock();\n  scrypt_js_1.scryptSync.lock();\n  sha2_js_1.sha256.lock();\n  sha2_js_1.sha512.lock();\n  random_js_1.randomBytes.lock();\n}\nexports.lock = lock;","map":{"version":3,"names":["hmac_js_1","require","Object","defineProperty","exports","enumerable","get","computeHmac","keccak_js_1","keccak256","ripemd160_js_1","ripemd160","pbkdf2_js_1","pbkdf2","random_js_1","randomBytes","scrypt_js_1","scrypt","scryptSync","sha2_js_1","sha256","sha512","signing_key_js_1","SigningKey","signature_js_1","Signature","lock"],"sources":["/home/nikola/Nikola/GitHub/FriendshipPlatform/node_modules/ethers/src.ts/crypto/index.ts"],"sourcesContent":["/**\n *  A fundamental building block of Ethereum is the underlying\n *  cryptographic primitives.\n *\n *  @_section: api/crypto:Cryptographic Functions   [about-crypto]\n */\n\nnull\n\n// We import all these so we can export lock()\nimport { computeHmac } from \"./hmac.js\";\nimport { keccak256 } from \"./keccak.js\";\nimport { ripemd160 } from \"./ripemd160.js\";\nimport { pbkdf2 } from \"./pbkdf2.js\";\nimport { randomBytes } from \"./random.js\";\nimport { scrypt, scryptSync } from \"./scrypt.js\";\nimport { sha256, sha512 } from \"./sha2.js\";\n\nexport {\n    computeHmac,\n\n    randomBytes,\n\n    keccak256,\n    ripemd160,\n    sha256, sha512,\n\n    pbkdf2,\n    scrypt, scryptSync\n};\n\nexport { SigningKey } from \"./signing-key.js\";\nexport { Signature } from \"./signature.js\";\n\n/**\n *  Once called, prevents any future change to the underlying cryptographic\n *  primitives using the ``.register`` feature for hooks.\n */\nfunction lock(): void {\n    computeHmac.lock();\n    keccak256.lock();\n    pbkdf2.lock();\n    randomBytes.lock();\n    ripemd160.lock();\n    scrypt.lock();\n    scryptSync.lock();\n    sha256.lock();\n    sha512.lock();\n    randomBytes.lock();\n}\n\nexport { lock };\n\n/////////////////////////////\n// Types\n\nexport type { ProgressCallback } from \"./scrypt.js\";\n\nexport type { SignatureLike } from \"./signature.js\";\n"],"mappings":";;AAAA;;;;;;;;;;AAOA,IAAI;AAEJ;AACA,MAAAA,SAAA,GAAAC,OAAA;AASIC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OATKN,SAAA,CAAAO,WAAW;EAAA;AAAA;AACpB,MAAAC,WAAA,GAAAP,OAAA;AAYIC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAZKE,WAAA,CAAAC,SAAS;EAAA;AAAA;AAClB,MAAAC,cAAA,GAAAT,OAAA;AAYIC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAZKI,cAAA,CAAAC,SAAS;EAAA;AAAA;AAClB,MAAAC,WAAA,GAAAX,OAAA;AAcIC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAdKM,WAAA,CAAAC,MAAM;EAAA;AAAA;AACf,MAAAC,WAAA,GAAAb,OAAA;AAOIC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAPKQ,WAAA,CAAAC,WAAW;EAAA;AAAA;AACpB,MAAAC,WAAA,GAAAf,OAAA;AAaIC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAbKU,WAAA,CAAAC,MAAM;EAAA;AAAA;AAaHf,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAbKU,WAAA,CAAAE,UAAU;EAAA;AAAA;AAC3B,MAAAC,SAAA,GAAAlB,OAAA;AASIC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OATKa,SAAA,CAAAC,MAAM;EAAA;AAAA;AASHlB,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OATKa,SAAA,CAAAE,MAAM;EAAA;AAAA;AAevB,IAAAC,gBAAA,GAAArB,OAAA;AAASC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAgB,gBAAA,CAAAC,UAAU;EAAA;AAAA;AACnB,IAAAC,cAAA,GAAAvB,OAAA;AAASC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAkB,cAAA,CAAAC,SAAS;EAAA;AAAA;AAElB;;;;AAIA,SAASC,IAAIA,CAAA;EACT1B,SAAA,CAAAO,WAAW,CAACmB,IAAI,EAAE;EAClBlB,WAAA,CAAAC,SAAS,CAACiB,IAAI,EAAE;EAChBd,WAAA,CAAAC,MAAM,CAACa,IAAI,EAAE;EACbZ,WAAA,CAAAC,WAAW,CAACW,IAAI,EAAE;EAClBhB,cAAA,CAAAC,SAAS,CAACe,IAAI,EAAE;EAChBV,WAAA,CAAAC,MAAM,CAACS,IAAI,EAAE;EACbV,WAAA,CAAAE,UAAU,CAACQ,IAAI,EAAE;EACjBP,SAAA,CAAAC,MAAM,CAACM,IAAI,EAAE;EACbP,SAAA,CAAAE,MAAM,CAACK,IAAI,EAAE;EACbZ,WAAA,CAAAC,WAAW,CAACW,IAAI,EAAE;AACtB;AAEStB,OAAA,CAAAsB,IAAA,GAAAA,IAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}