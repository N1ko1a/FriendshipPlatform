{"ast":null,"code":"\"use strict\";\n\n//See: https://github.com/ethereum/wiki/wiki/RLP\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeRlp = void 0;\nconst data_js_1 = require(\"./data.js\");\nconst errors_js_1 = require(\"./errors.js\");\nconst data_js_2 = require(\"./data.js\");\nfunction hexlifyByte(value) {\n  let result = value.toString(16);\n  while (result.length < 2) {\n    result = \"0\" + result;\n  }\n  return \"0x\" + result;\n}\nfunction unarrayifyInteger(data, offset, length) {\n  let result = 0;\n  for (let i = 0; i < length; i++) {\n    result = result * 256 + data[offset + i];\n  }\n  return result;\n}\nfunction _decodeChildren(data, offset, childOffset, length) {\n  const result = [];\n  while (childOffset < offset + 1 + length) {\n    const decoded = _decode(data, childOffset);\n    result.push(decoded.result);\n    childOffset += decoded.consumed;\n    (0, errors_js_1.assert)(childOffset <= offset + 1 + length, \"child data too short\", \"BUFFER_OVERRUN\", {\n      buffer: data,\n      length,\n      offset\n    });\n  }\n  return {\n    consumed: 1 + length,\n    result: result\n  };\n}\n// returns { consumed: number, result: Object }\nfunction _decode(data, offset) {\n  (0, errors_js_1.assert)(data.length !== 0, \"data too short\", \"BUFFER_OVERRUN\", {\n    buffer: data,\n    length: 0,\n    offset: 1\n  });\n  const checkOffset = offset => {\n    (0, errors_js_1.assert)(offset <= data.length, \"data short segment too short\", \"BUFFER_OVERRUN\", {\n      buffer: data,\n      length: data.length,\n      offset\n    });\n  };\n  // Array with extra length prefix\n  if (data[offset] >= 0xf8) {\n    const lengthLength = data[offset] - 0xf7;\n    checkOffset(offset + 1 + lengthLength);\n    const length = unarrayifyInteger(data, offset + 1, lengthLength);\n    checkOffset(offset + 1 + lengthLength + length);\n    return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n  } else if (data[offset] >= 0xc0) {\n    const length = data[offset] - 0xc0;\n    checkOffset(offset + 1 + length);\n    return _decodeChildren(data, offset, offset + 1, length);\n  } else if (data[offset] >= 0xb8) {\n    const lengthLength = data[offset] - 0xb7;\n    checkOffset(offset + 1 + lengthLength);\n    const length = unarrayifyInteger(data, offset + 1, lengthLength);\n    checkOffset(offset + 1 + lengthLength + length);\n    const result = (0, data_js_1.hexlify)(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n    return {\n      consumed: 1 + lengthLength + length,\n      result: result\n    };\n  } else if (data[offset] >= 0x80) {\n    const length = data[offset] - 0x80;\n    checkOffset(offset + 1 + length);\n    const result = (0, data_js_1.hexlify)(data.slice(offset + 1, offset + 1 + length));\n    return {\n      consumed: 1 + length,\n      result: result\n    };\n  }\n  return {\n    consumed: 1,\n    result: hexlifyByte(data[offset])\n  };\n}\n/**\n *  Decodes %%data%% into the structured data it represents.\n */\nfunction decodeRlp(_data) {\n  const data = (0, data_js_2.getBytes)(_data, \"data\");\n  const decoded = _decode(data, 0);\n  (0, errors_js_1.assertArgument)(decoded.consumed === data.length, \"unexpected junk after rlp payload\", \"data\", _data);\n  return decoded.result;\n}\nexports.decodeRlp = decodeRlp;","map":{"version":3,"names":["data_js_1","require","errors_js_1","data_js_2","hexlifyByte","value","result","toString","length","unarrayifyInteger","data","offset","i","_decodeChildren","childOffset","decoded","_decode","push","consumed","assert","buffer","checkOffset","lengthLength","hexlify","slice","decodeRlp","_data","getBytes","assertArgument","exports"],"sources":["/home/nikola/Desktop/Projekat/friendship-dapp/node_modules/ethers/src.ts/utils/rlp-decode.ts"],"sourcesContent":["//See: https://github.com/ethereum/wiki/wiki/RLP\n\nimport { hexlify } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\nimport { getBytes } from \"./data.js\";\n\nimport type { BytesLike, RlpStructuredData } from \"./index.js\";\n\n\nfunction hexlifyByte(value: number): string {\n    let result = value.toString(16);\n    while (result.length < 2) { result = \"0\" + result; }\n    return \"0x\" + result;\n}\n\nfunction unarrayifyInteger(data: Uint8Array, offset: number, length: number): number {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\n\ntype Decoded = {\n    result: any;\n    consumed: number;\n};\n\nfunction _decodeChildren(data: Uint8Array, offset: number, childOffset: number, length: number): Decoded {\n    const result = [];\n\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n\n        result.push(decoded.result);\n\n        childOffset += decoded.consumed;\n        assert(childOffset <= offset + 1 + length, \"child data too short\", \"BUFFER_OVERRUN\", {\n            buffer: data, length, offset\n        });\n    }\n\n    return {consumed: (1 + length), result: result};\n}\n\n// returns { consumed: number, result: Object }\nfunction _decode(data: Uint8Array, offset: number): { consumed: number, result: any } {\n    assert(data.length !== 0, \"data too short\", \"BUFFER_OVERRUN\", {\n        buffer: data, length: 0, offset: 1\n    });\n\n    const checkOffset = (offset: number) => {\n        assert(offset <= data.length, \"data short segment too short\", \"BUFFER_OVERRUN\", {\n            buffer: data, length: data.length, offset\n        });\n    };\n\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        checkOffset(offset + 1 + lengthLength);\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        checkOffset(offset + 1 + lengthLength + length);\n\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n\n    } else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        checkOffset(offset + 1 + length);\n\n        return _decodeChildren(data, offset, offset + 1, length);\n\n    } else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        checkOffset(offset + 1 + lengthLength);\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        checkOffset(offset + 1 + lengthLength + length);\n\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result }\n\n    } else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        checkOffset(offset + 1 + length);\n\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result }\n    }\n\n    return { consumed: 1, result: hexlifyByte(data[offset]) };\n}\n\n/**\n *  Decodes %%data%% into the structured data it represents.\n */\nexport function decodeRlp(_data: BytesLike): RlpStructuredData {\n    const data = getBytes(_data, \"data\");\n    const decoded = _decode(data, 0);\n    assertArgument(decoded.consumed === data.length, \"unexpected junk after rlp payload\", \"data\", _data);\n    return decoded.result;\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}