{"ast":null,"code":"\"use strict\";\n\n/**\n *  Addresses are a fundamental part of interacting with Ethereum. They\n *  represent the gloabal identity of Externally Owned Accounts (accounts\n *  backed by a private key) and contracts.\n *\n *  The Ethereum Naming Service (ENS) provides an interconnected ecosystem\n *  of contracts, standards and libraries which enable looking up an\n *  address for an ENS name.\n *\n *  These functions help convert between various formats, validate\n *  addresses and safely resolve ENS names.\n *\n *  @_section: api/address:Addresses  [about-addresses]\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveAddress = exports.isAddress = exports.isAddressable = exports.getCreate2Address = exports.getCreateAddress = exports.getIcapAddress = exports.getAddress = void 0;\nnull;\nvar address_js_1 = require(\"./address.js\");\nObject.defineProperty(exports, \"getAddress\", {\n  enumerable: true,\n  get: function () {\n    return address_js_1.getAddress;\n  }\n});\nObject.defineProperty(exports, \"getIcapAddress\", {\n  enumerable: true,\n  get: function () {\n    return address_js_1.getIcapAddress;\n  }\n});\nvar contract_address_js_1 = require(\"./contract-address.js\");\nObject.defineProperty(exports, \"getCreateAddress\", {\n  enumerable: true,\n  get: function () {\n    return contract_address_js_1.getCreateAddress;\n  }\n});\nObject.defineProperty(exports, \"getCreate2Address\", {\n  enumerable: true,\n  get: function () {\n    return contract_address_js_1.getCreate2Address;\n  }\n});\nvar checks_js_1 = require(\"./checks.js\");\nObject.defineProperty(exports, \"isAddressable\", {\n  enumerable: true,\n  get: function () {\n    return checks_js_1.isAddressable;\n  }\n});\nObject.defineProperty(exports, \"isAddress\", {\n  enumerable: true,\n  get: function () {\n    return checks_js_1.isAddress;\n  }\n});\nObject.defineProperty(exports, \"resolveAddress\", {\n  enumerable: true,\n  get: function () {\n    return checks_js_1.resolveAddress;\n  }\n});","map":{"version":3,"names":["address_js_1","require","Object","defineProperty","exports","enumerable","get","getAddress","getIcapAddress","contract_address_js_1","getCreateAddress","getCreate2Address","checks_js_1","isAddressable","isAddress","resolveAddress"],"sources":["/home/nikola/Desktop/Kriptografija projekat Nikola Ivanovic 637-2019/friendship-dapp/node_modules/ethers/src.ts/address/index.ts"],"sourcesContent":["/**\n *  Addresses are a fundamental part of interacting with Ethereum. They\n *  represent the gloabal identity of Externally Owned Accounts (accounts\n *  backed by a private key) and contracts.\n *\n *  The Ethereum Naming Service (ENS) provides an interconnected ecosystem\n *  of contracts, standards and libraries which enable looking up an\n *  address for an ENS name.\n *\n *  These functions help convert between various formats, validate\n *  addresses and safely resolve ENS names.\n *\n *  @_section: api/address:Addresses  [about-addresses]\n */\n\nnull;\n\n/**\n *  An interface for objects which have an address, and can\n *  resolve it asyncronously.\n *\n *  This allows objects such as [[Signer]] or [[Contract]] to\n *  be used most places an address can be, for example getting\n *  the [balance](Provider-getBalance).\n */\nexport interface Addressable {\n    /**\n     *  Get the object address.\n     */\n    getAddress(): Promise<string>;\n}\n\n/**\n *  Anything that can be used to return or resolve an address.\n */\nexport type AddressLike = string | Promise<string> | Addressable;\n\n/**\n *  An interface for any object which can resolve an ENS name.\n */\nexport interface NameResolver {\n    /**\n     *  Resolve to the address for the ENS %%name%%.\n     *\n     *  Resolves to ``null`` if the name is unconfigued. Use\n     *  [[resolveAddress]] (passing this object as %%resolver%%) to\n     *  throw for names that are unconfigured.\n     */\n    resolveName(name: string): Promise<null | string>;\n}\n\nexport { getAddress, getIcapAddress } from \"./address.js\";\n\nexport { getCreateAddress, getCreate2Address } from \"./contract-address.js\";\n\n\nexport { isAddressable, isAddress, resolveAddress } from \"./checks.js\";\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;AAeA,IAAI;AAoCJ,IAAAA,YAAA,GAAAC,OAAA;AAASC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAN,YAAA,CAAAO,UAAU;EAAA;AAAA;AAAEL,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAN,YAAA,CAAAQ,cAAc;EAAA;AAAA;AAEnC,IAAAC,qBAAA,GAAAR,OAAA;AAASC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAG,qBAAA,CAAAC,gBAAgB;EAAA;AAAA;AAAER,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAG,qBAAA,CAAAE,iBAAiB;EAAA;AAAA;AAG5C,IAAAC,WAAA,GAAAX,OAAA;AAASC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAM,WAAA,CAAAC,aAAa;EAAA;AAAA;AAAEX,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAM,WAAA,CAAAE,SAAS;EAAA;AAAA;AAAEZ,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAM,WAAA,CAAAG,cAAc;EAAA;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}