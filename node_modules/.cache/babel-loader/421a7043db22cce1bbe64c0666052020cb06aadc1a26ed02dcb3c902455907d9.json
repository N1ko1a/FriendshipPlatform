{"ast":null,"code":"\"use strict\";\n\n/**\n *  About bytes32 strings...\n *\n *  @_docloc: api/utils:Bytes32 Strings\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeBytes32String = exports.encodeBytes32String = void 0;\nconst index_js_1 = require(\"../utils/index.js\");\n/**\n *  Encodes %%text%% as a Bytes32 string.\n */\nfunction encodeBytes32String(text) {\n  // Get the bytes\n  const bytes = (0, index_js_1.toUtf8Bytes)(text);\n  // Check we have room for null-termination\n  if (bytes.length > 31) {\n    throw new Error(\"bytes32 string must be less than 32 bytes\");\n  }\n  // Zero-pad (implicitly null-terminates)\n  return (0, index_js_1.zeroPadBytes)(bytes, 32);\n}\nexports.encodeBytes32String = encodeBytes32String;\n/**\n *  Encodes the Bytes32-encoded %%bytes%% into a string.\n */\nfunction decodeBytes32String(_bytes) {\n  const data = (0, index_js_1.getBytes)(_bytes, \"bytes\");\n  // Must be 32 bytes with a null-termination\n  if (data.length !== 32) {\n    throw new Error(\"invalid bytes32 - not 32 bytes long\");\n  }\n  if (data[31] !== 0) {\n    throw new Error(\"invalid bytes32 string - no null terminator\");\n  }\n  // Find the null termination\n  let length = 31;\n  while (data[length - 1] === 0) {\n    length--;\n  }\n  // Determine the string value\n  return (0, index_js_1.toUtf8String)(data.slice(0, length));\n}\nexports.decodeBytes32String = decodeBytes32String;","map":{"version":3,"names":["index_js_1","require","encodeBytes32String","text","bytes","toUtf8Bytes","length","Error","zeroPadBytes","exports","decodeBytes32String","_bytes","data","getBytes","toUtf8String","slice"],"sources":["/home/nikola/Desktop/Kriptografija projekat Nikola Ivanovic 637-2019/friendship-dapp/node_modules/ethers/src.ts/abi/bytes32.ts"],"sourcesContent":["/**\n *  About bytes32 strings...\n *\n *  @_docloc: api/utils:Bytes32 Strings\n */\n\nimport {\n    getBytes, toUtf8Bytes, toUtf8String, zeroPadBytes\n} from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n/**\n *  Encodes %%text%% as a Bytes32 string.\n */\nexport function encodeBytes32String(text: string): string {\n\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n\n    // Check we have room for null-termination\n    if (bytes.length > 31) { throw new Error(\"bytes32 string must be less than 32 bytes\"); }\n\n    // Zero-pad (implicitly null-terminates)\n    return zeroPadBytes(bytes, 32);\n}\n\n/**\n *  Encodes the Bytes32-encoded %%bytes%% into a string.\n */\nexport function decodeBytes32String(_bytes: BytesLike): string {\n    const data = getBytes(_bytes, \"bytes\");\n\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) { throw new Error(\"invalid bytes32 - not 32 bytes long\"); }\n    if (data[31] !== 0) { throw new Error(\"invalid bytes32 string - no null terminator\"); }\n\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) { length--; }\n\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n\n"],"mappings":";;AAAA;;;;;;;;;AAMA,MAAAA,UAAA,GAAAC,OAAA;AAMA;;;AAGA,SAAgBC,mBAAmBA,CAACC,IAAY;EAE5C;EACA,MAAMC,KAAK,GAAG,IAAAJ,UAAA,CAAAK,WAAW,EAACF,IAAI,CAAC;EAE/B;EACA,IAAIC,KAAK,CAACE,MAAM,GAAG,EAAE,EAAE;IAAE,MAAM,IAAIC,KAAK,CAAC,2CAA2C,CAAC;;EAErF;EACA,OAAO,IAAAP,UAAA,CAAAQ,YAAY,EAACJ,KAAK,EAAE,EAAE,CAAC;AAClC;AAVAK,OAAA,CAAAP,mBAAA,GAAAA,mBAAA;AAYA;;;AAGA,SAAgBQ,mBAAmBA,CAACC,MAAiB;EACjD,MAAMC,IAAI,GAAG,IAAAZ,UAAA,CAAAa,QAAQ,EAACF,MAAM,EAAE,OAAO,CAAC;EAEtC;EACA,IAAIC,IAAI,CAACN,MAAM,KAAK,EAAE,EAAE;IAAE,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;;EAChF,IAAIK,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;IAAE,MAAM,IAAIL,KAAK,CAAC,6CAA6C,CAAC;;EAEpF;EACA,IAAID,MAAM,GAAG,EAAE;EACf,OAAOM,IAAI,CAACN,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;IAAEA,MAAM,EAAE;;EAEzC;EACA,OAAO,IAAAN,UAAA,CAAAc,YAAY,EAACF,IAAI,CAACG,KAAK,CAAC,CAAC,EAAET,MAAM,CAAC,CAAC;AAC9C;AAbAG,OAAA,CAAAC,mBAAA,GAAAA,mBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}