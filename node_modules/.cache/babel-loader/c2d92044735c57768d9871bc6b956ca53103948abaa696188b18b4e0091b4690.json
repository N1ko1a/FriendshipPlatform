{"ast":null,"code":"\"use strict\";\n\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\n// Cast array to different type\nconst u8 = arr => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = arr => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = arr => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => word << 32 - shift | word >>> shift;\nexports.rotr = rotr;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!exports.isLE) throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({\n  length: 256\n}, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nfunction bytesToHex(uint8a) {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n  return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('deadbeef')\n */\nfunction hexToBytes(hex) {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => {};\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await (0, exports.nextTick)();\n    ts += diff;\n  }\n}\nexports.asyncLoop = asyncLoop;\nfunction utf8ToBytes(str) {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\nexports.utf8ToBytes = utf8ToBytes;\nfunction toBytes(data) {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array)) throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\nexports.toBytes = toBytes;\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nfunction concatBytes(...arrays) {\n  if (!arrays.every(a => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n  // Safe version that clones internal state\n  clone() {\n    return this._cloneInto();\n  }\n}\nexports.Hash = Hash;\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = obj => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(defaults, opts) {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts))) throw new TypeError('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashConstructor) {\n  const hashC = message => hashConstructor().update(toBytes(message)).digest();\n  const tmp = hashConstructor();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashConstructor();\n  return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n  const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({});\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = opts => hashCons(opts);\n  return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\n/**\n * Secure PRNG\n */\nfunction randomBytes(bytesLength = 32) {\n  if (crypto_1.crypto.web) {\n    return crypto_1.crypto.web.getRandomValues(new Uint8Array(bytesLength));\n  } else if (crypto_1.crypto.node) {\n    return new Uint8Array(crypto_1.crypto.node.randomBytes(bytesLength).buffer);\n  } else {\n    throw new Error(\"The environment doesn't have randomBytes function\");\n  }\n}\nexports.randomBytes = randomBytes;","map":{"version":3,"names":["Object","defineProperty","exports","value","randomBytes","wrapConstructorWithOpts","wrapConstructor","checkOpts","Hash","concatBytes","toBytes","utf8ToBytes","asyncLoop","nextTick","hexToBytes","bytesToHex","isLE","rotr","createView","u32","u8","crypto_1","require","arr","Uint8Array","buffer","byteOffset","byteLength","Uint32Array","Math","floor","DataView","word","shift","Error","hexes","Array","from","length","v","i","toString","padStart","uint8a","hex","TypeError","array","j","hexByte","slice","byte","Number","parseInt","isNaN","iters","tick","cb","ts","Date","now","diff","str","TextEncoder","encode","data","arrays","every","a","reduce","result","pad","set","clone","_cloneInto","isPlainObject","obj","prototype","call","constructor","defaults","opts","undefined","merged","assign","hashConstructor","hashC","message","update","digest","tmp","outputLen","blockLen","create","hashCons","msg","bytesLength","crypto","web","getRandomValues","node"],"sources":["/home/nikola/Nikola/GitHub/FriendshipPlatform/node_modules/@noble/hashes/utils.js"],"sourcesContent":["\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nfunction bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('deadbeef')\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexports.utf8ToBytes = utf8ToBytes;\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\n/**\n * Secure PRNG\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto.web) {\n        return crypto_1.crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto_1.crypto.node) {\n        return new Uint8Array(crypto_1.crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\nexports.randomBytes = randomBytes;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}