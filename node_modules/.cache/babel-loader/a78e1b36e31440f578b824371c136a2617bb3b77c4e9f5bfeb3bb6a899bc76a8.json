{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FixedBytesCoder = void 0;\nconst index_js_1 = require(\"../../utils/index.js\");\nconst typed_js_1 = require(\"../typed.js\");\nconst abstract_coder_js_1 = require(\"./abstract-coder.js\");\n/**\n *  @_ignore\n */\nclass FixedBytesCoder extends abstract_coder_js_1.Coder {\n  size;\n  constructor(size, localName) {\n    let name = \"bytes\" + String(size);\n    super(name, name, localName, false);\n    (0, index_js_1.defineProperties)(this, {\n      size\n    }, {\n      size: \"number\"\n    });\n  }\n  defaultValue() {\n    return \"0x0000000000000000000000000000000000000000000000000000000000000000\".substring(0, 2 + this.size * 2);\n  }\n  encode(writer, _value) {\n    let data = (0, index_js_1.getBytesCopy)(typed_js_1.Typed.dereference(_value, this.type));\n    if (data.length !== this.size) {\n      this._throwError(\"incorrect data length\", _value);\n    }\n    return writer.writeBytes(data);\n  }\n  decode(reader) {\n    return (0, index_js_1.hexlify)(reader.readBytes(this.size));\n  }\n}\nexports.FixedBytesCoder = FixedBytesCoder;","map":{"version":3,"names":["index_js_1","require","typed_js_1","abstract_coder_js_1","FixedBytesCoder","Coder","size","constructor","localName","name","String","defineProperties","defaultValue","substring","encode","writer","_value","data","getBytesCopy","Typed","dereference","type","length","_throwError","writeBytes","decode","reader","hexlify","readBytes","exports"],"sources":["/home/nikola/Desktop/Projekat/friendship-dapp/node_modules/ethers/src.ts/abi/coders/fixed-bytes.ts"],"sourcesContent":["\nimport { defineProperties, getBytesCopy, hexlify } from \"../../utils/index.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n\nimport type { BytesLike } from \"../../utils/index.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\n/**\n *  @_ignore\n */\nexport class FixedBytesCoder extends Coder {\n    readonly size!: number;\n\n    constructor(size: number, localName: string) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        defineProperties<FixedBytesCoder>(this, { size }, { size: \"number\" });\n    }\n\n    defaultValue(): string {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n\n    encode(writer: Writer, _value: BytesLike | Typed): number {\n        let data = getBytesCopy(Typed.dereference(_value, this.type));\n        if (data.length !== this.size) { this._throwError(\"incorrect data length\", _value); }\n        return writer.writeBytes(data);\n    }\n\n    decode(reader: Reader): any {\n        return hexlify(reader.readBytes(this.size));\n    }\n}\n"],"mappings":";;;;;;AACA,MAAAA,UAAA,GAAAC,OAAA;AAEA,MAAAC,UAAA,GAAAD,OAAA;AACA,MAAAE,mBAAA,GAAAF,OAAA;AAOA;;;AAGA,MAAaG,eAAgB,SAAQD,mBAAA,CAAAE,KAAK;EAC7BC,IAAI;EAEbC,YAAYD,IAAY,EAAEE,SAAiB;IACvC,IAAIC,IAAI,GAAG,OAAO,GAAGC,MAAM,CAACJ,IAAI,CAAC;IACjC,KAAK,CAACG,IAAI,EAAEA,IAAI,EAAED,SAAS,EAAE,KAAK,CAAC;IACnC,IAAAR,UAAA,CAAAW,gBAAgB,EAAkB,IAAI,EAAE;MAAEL;IAAI,CAAE,EAAE;MAAEA,IAAI,EAAE;IAAQ,CAAE,CAAC;EACzE;EAEAM,YAAYA,CAAA;IACR,OAAQ,oEAAoE,CAAEC,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAACP,IAAI,GAAG,CAAC,CAAC;EACjH;EAEAQ,MAAMA,CAACC,MAAc,EAAEC,MAAyB;IAC5C,IAAIC,IAAI,GAAG,IAAAjB,UAAA,CAAAkB,YAAY,EAAChB,UAAA,CAAAiB,KAAK,CAACC,WAAW,CAACJ,MAAM,EAAE,IAAI,CAACK,IAAI,CAAC,CAAC;IAC7D,IAAIJ,IAAI,CAACK,MAAM,KAAK,IAAI,CAAChB,IAAI,EAAE;MAAE,IAAI,CAACiB,WAAW,CAAC,uBAAuB,EAAEP,MAAM,CAAC;;IAClF,OAAOD,MAAM,CAACS,UAAU,CAACP,IAAI,CAAC;EAClC;EAEAQ,MAAMA,CAACC,MAAc;IACjB,OAAO,IAAA1B,UAAA,CAAA2B,OAAO,EAACD,MAAM,CAACE,SAAS,CAAC,IAAI,CAACtB,IAAI,CAAC,CAAC;EAC/C;;AArBJuB,OAAA,CAAAzB,eAAA,GAAAA,eAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}