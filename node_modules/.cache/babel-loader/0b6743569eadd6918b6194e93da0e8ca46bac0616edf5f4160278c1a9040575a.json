{"ast":null,"code":"\"use strict\";\n\n/**\n *  The Application Binary Interface (ABI) describes how method input\n *  parameters should be encoded, their results decoded, and how to\n *  decode events and errors.\n *\n *  See [About ABIs](docs-abi) for more details how they are used.\n *\n *  @_section api/abi:Application Binary Interface  [about-abi]\n *  @_navTitle: ABI\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Typed = exports.Result = exports.TransactionDescription = exports.LogDescription = exports.ErrorDescription = exports.Interface = exports.Indexed = exports.checkResultErrors = exports.StructFragment = exports.ParamType = exports.NamedFragment = exports.FunctionFragment = exports.Fragment = exports.FallbackFragment = exports.EventFragment = exports.ErrorFragment = exports.ConstructorFragment = exports.encodeBytes32String = exports.decodeBytes32String = exports.AbiCoder = void 0;\n//////\nvar abi_coder_js_1 = require(\"./abi-coder.js\");\nObject.defineProperty(exports, \"AbiCoder\", {\n  enumerable: true,\n  get: function () {\n    return abi_coder_js_1.AbiCoder;\n  }\n});\nvar bytes32_js_1 = require(\"./bytes32.js\");\nObject.defineProperty(exports, \"decodeBytes32String\", {\n  enumerable: true,\n  get: function () {\n    return bytes32_js_1.decodeBytes32String;\n  }\n});\nObject.defineProperty(exports, \"encodeBytes32String\", {\n  enumerable: true,\n  get: function () {\n    return bytes32_js_1.encodeBytes32String;\n  }\n});\nvar fragments_js_1 = require(\"./fragments.js\");\nObject.defineProperty(exports, \"ConstructorFragment\", {\n  enumerable: true,\n  get: function () {\n    return fragments_js_1.ConstructorFragment;\n  }\n});\nObject.defineProperty(exports, \"ErrorFragment\", {\n  enumerable: true,\n  get: function () {\n    return fragments_js_1.ErrorFragment;\n  }\n});\nObject.defineProperty(exports, \"EventFragment\", {\n  enumerable: true,\n  get: function () {\n    return fragments_js_1.EventFragment;\n  }\n});\nObject.defineProperty(exports, \"FallbackFragment\", {\n  enumerable: true,\n  get: function () {\n    return fragments_js_1.FallbackFragment;\n  }\n});\nObject.defineProperty(exports, \"Fragment\", {\n  enumerable: true,\n  get: function () {\n    return fragments_js_1.Fragment;\n  }\n});\nObject.defineProperty(exports, \"FunctionFragment\", {\n  enumerable: true,\n  get: function () {\n    return fragments_js_1.FunctionFragment;\n  }\n});\nObject.defineProperty(exports, \"NamedFragment\", {\n  enumerable: true,\n  get: function () {\n    return fragments_js_1.NamedFragment;\n  }\n});\nObject.defineProperty(exports, \"ParamType\", {\n  enumerable: true,\n  get: function () {\n    return fragments_js_1.ParamType;\n  }\n});\nObject.defineProperty(exports, \"StructFragment\", {\n  enumerable: true,\n  get: function () {\n    return fragments_js_1.StructFragment;\n  }\n});\nvar interface_js_1 = require(\"./interface.js\");\nObject.defineProperty(exports, \"checkResultErrors\", {\n  enumerable: true,\n  get: function () {\n    return interface_js_1.checkResultErrors;\n  }\n});\nObject.defineProperty(exports, \"Indexed\", {\n  enumerable: true,\n  get: function () {\n    return interface_js_1.Indexed;\n  }\n});\nObject.defineProperty(exports, \"Interface\", {\n  enumerable: true,\n  get: function () {\n    return interface_js_1.Interface;\n  }\n});\nObject.defineProperty(exports, \"ErrorDescription\", {\n  enumerable: true,\n  get: function () {\n    return interface_js_1.ErrorDescription;\n  }\n});\nObject.defineProperty(exports, \"LogDescription\", {\n  enumerable: true,\n  get: function () {\n    return interface_js_1.LogDescription;\n  }\n});\nObject.defineProperty(exports, \"TransactionDescription\", {\n  enumerable: true,\n  get: function () {\n    return interface_js_1.TransactionDescription;\n  }\n});\nObject.defineProperty(exports, \"Result\", {\n  enumerable: true,\n  get: function () {\n    return interface_js_1.Result;\n  }\n});\nvar typed_js_1 = require(\"./typed.js\");\nObject.defineProperty(exports, \"Typed\", {\n  enumerable: true,\n  get: function () {\n    return typed_js_1.Typed;\n  }\n});","map":{"version":3,"names":["abi_coder_js_1","require","Object","defineProperty","exports","enumerable","get","AbiCoder","bytes32_js_1","decodeBytes32String","encodeBytes32String","fragments_js_1","ConstructorFragment","ErrorFragment","EventFragment","FallbackFragment","Fragment","FunctionFragment","NamedFragment","ParamType","StructFragment","interface_js_1","checkResultErrors","Indexed","Interface","ErrorDescription","LogDescription","TransactionDescription","Result","typed_js_1","Typed"],"sources":["/home/nikola/Desktop/Kriptografija projekat Nikola Ivanovic 637-2019/friendship-dapp/node_modules/ethers/src.ts/abi/index.ts"],"sourcesContent":["/**\n *  The Application Binary Interface (ABI) describes how method input\n *  parameters should be encoded, their results decoded, and how to\n *  decode events and errors.\n *\n *  See [About ABIs](docs-abi) for more details how they are used.\n *\n *  @_section api/abi:Application Binary Interface  [about-abi]\n *  @_navTitle: ABI\n */\n\n\n//////\nexport { AbiCoder } from \"./abi-coder.js\";\n\nexport { decodeBytes32String, encodeBytes32String } from \"./bytes32.js\";\n\nexport {\n    ConstructorFragment, ErrorFragment, EventFragment, FallbackFragment,\n    Fragment, FunctionFragment, NamedFragment, ParamType, StructFragment,\n} from \"./fragments.js\";\n\nexport {\n    checkResultErrors,\n    Indexed,\n    Interface,\n    ErrorDescription, LogDescription, TransactionDescription,\n    Result\n} from \"./interface.js\";\n\nexport { Typed } from \"./typed.js\";\n\nexport type {\n    JsonFragment, JsonFragmentType,\n    FormatType, FragmentType, ParamTypeWalkAsyncFunc, ParamTypeWalkFunc\n} from \"./fragments.js\";\n\nexport type {\n    InterfaceAbi,\n} from \"./interface.js\";\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}