{"ast":null,"code":"var _jsxFileName = \"/home/nikola/Desktop/Projekat/friendship-dapp/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport abi from './contract.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ethers = require(\"ethers\");\nconst contractAddress = '0xABcf117829a434326E159D70b84035F629AEA33C'; // Replace with the actual contract address\n\nfunction App() {\n  _s();\n  const [connectedContract, setConnectedContract] = useState(null);\n  const [userAddress, setUserAddress] = useState(null);\n  const [userName, setUserName] = useState('');\n  const [toAddress, setToAddress] = useState('');\n  const [fromAddress, setFromAddress] = useState('');\n  const [provider, setProvider] = useState(null);\n  useEffect(() => {\n    if (window.ethereum) {\n      const newProvider = new ethers.BrowserProvider(window.ethereum);\n      setProvider(newProvider);\n    }\n  }, []);\n  const connect = async () => {\n    if (!provider) {\n      console.log(\"Ethereum provider not available.\");\n      return;\n    }\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = await provider.getSigner();\n    const connectedContract = new ethers.Contract(contractAddress, abi, signer);\n    const address = await signer.getAddress();\n    setConnectedContract(connectedContract);\n    setUserAddress(address);\n  };\n  const registerUser = async () => {\n    if (!connectedContract) {\n      console.log(\"Contract not connected yet.\");\n      return;\n    }\n    const tx = await connectedContract.registerUser(userName);\n    await tx.wait();\n    console.log('User registered:', tx.hash);\n  };\n  const sendFriendRequest = async () => {\n    if (!connectedContract) {\n      console.log(\"Contract not connected yet.\");\n      return;\n    }\n    try {\n      const tx = await connectedContract.sendFriendRequest(toAddress);\n      await tx.wait();\n      console.log('Friend request sent:', tx.hash);\n    } catch (error) {\n      console.error('Error sending friend request:', error);\n    }\n  };\n  const acceptFriendRequest = async () => {\n    if (!connectedContract) {\n      console.log(\"Contract not connected yet.\");\n      return;\n    }\n    try {\n      const tx = await connectedContract.acceptFriendRequest(fromAddress);\n      await tx.wait();\n      console.log('Friend request accepted:', tx.hash);\n    } catch (error) {\n      console.error('Error accepting friend request:', error);\n    }\n  };\n  const fetchUserData = async () => {\n    if (!connectedContract) {\n      console.log(\"Contract not connected yet.\");\n      return;\n    }\n    try {\n      const userAddress = await provider.getSigner().getAddress();\n      const userData = await connectedContract.getUserDetails(userAddress);\n      setUserData(userData);\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connect,\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), userAddress && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected User Address: \", userAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"username\",\n      placeholder: \"Enter username\",\n      onChange: e => setUserName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: registerUser,\n      children: \"Register User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Send Friend Request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: toAddress,\n      onChange: e => setToAddress(e.target.value),\n      placeholder: \"Friend's Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendFriendRequest,\n      children: \"Send Request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Accept Friend Request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: fromAddress,\n      onChange: e => setFromAddress(e.target.value),\n      placeholder: \"Friend's Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: acceptFriendRequest,\n      children: \"Accept Request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchUserData,\n      children: \"Fetch User Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), userData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", userData[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Friend List: \", userData[1].join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pending Requests: \", userData[2].join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0qDrTWpEY+54yO4MPRh3ym282o8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","abi","jsxDEV","_jsxDEV","ethers","require","contractAddress","App","_s","connectedContract","setConnectedContract","userAddress","setUserAddress","userName","setUserName","toAddress","setToAddress","fromAddress","setFromAddress","provider","setProvider","window","ethereum","newProvider","BrowserProvider","connect","console","log","send","signer","getSigner","Contract","address","getAddress","registerUser","tx","wait","hash","sendFriendRequest","error","acceptFriendRequest","fetchUserData","userData","getUserDetails","setUserData","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","onChange","e","target","value","join","_c","$RefreshReg$"],"sources":["/home/nikola/Desktop/Projekat/friendship-dapp/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport abi from './contract.json';\n\nconst ethers = require(\"ethers\");\nconst contractAddress = '0xABcf117829a434326E159D70b84035F629AEA33C'; // Replace with the actual contract address\n\nfunction App() {\n  const [connectedContract, setConnectedContract] = useState(null);\n  const [userAddress, setUserAddress] = useState(null);\n  const [userName, setUserName] = useState('');\n  const [toAddress, setToAddress] = useState('');\n  const [fromAddress, setFromAddress] = useState('');\n  const [provider, setProvider] = useState(null);\n\n  useEffect(() => {\n    if (window.ethereum) {\n      const newProvider = new ethers.BrowserProvider(window.ethereum);\n      setProvider(newProvider);\n    }\n  }, []);\n\n  const connect = async () => {\n    if (!provider) {\n      console.log(\"Ethereum provider not available.\");\n      return;\n    }\n\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = await provider.getSigner();\n    const connectedContract = new ethers.Contract(contractAddress, abi, signer);\n    const address = await signer.getAddress();\n\n    setConnectedContract(connectedContract);\n    setUserAddress(address);\n  };\n\n  const registerUser = async () => {\n    if (!connectedContract) {\n      console.log(\"Contract not connected yet.\");\n      return;\n    }\n\n    const tx = await connectedContract.registerUser(userName);\n    await tx.wait();\n    console.log('User registered:', tx.hash);\n  };\n\n  const sendFriendRequest = async () => {\n    if (!connectedContract) {\n      console.log(\"Contract not connected yet.\");\n      return;\n    }\n\n    try {\n      const tx = await connectedContract.sendFriendRequest(toAddress);\n      await tx.wait();\n      console.log('Friend request sent:', tx.hash);\n    } catch (error) {\n      console.error('Error sending friend request:', error);\n    }\n  };\n\n  const acceptFriendRequest = async () => {\n    if (!connectedContract) {\n      console.log(\"Contract not connected yet.\");\n      return;\n    }\n\n    try {\n      const tx = await connectedContract.acceptFriendRequest(fromAddress);\n      await tx.wait();\n      console.log('Friend request accepted:', tx.hash);\n    } catch (error) {\n      console.error('Error accepting friend request:', error);\n    }\n  };\n  const fetchUserData = async () => {\n    if (!connectedContract) {\n      console.log(\"Contract not connected yet.\");\n      return;\n    }\n\n    try {\n      const userAddress = await provider.getSigner().getAddress();\n      const userData = await connectedContract.getUserDetails(userAddress);\n      setUserData(userData);\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={connect}>Connect</button>\n      {userAddress && <p>Connected User Address: {userAddress}</p>}\n      <input\n        type=\"text\"\n        id=\"username\"\n        placeholder=\"Enter username\"\n        onChange={(e) => setUserName(e.target.value)}\n      />\n      <button onClick={registerUser}>Register User</button>\n\n      <h2>Send Friend Request</h2>\n      <input\n        type=\"text\"\n        value={toAddress}\n        onChange={(e) => setToAddress(e.target.value)}\n        placeholder=\"Friend's Address\"\n      />\n      <button onClick={sendFriendRequest}>Send Request</button>\n\n      <h2>Accept Friend Request</h2>\n      <input\n        type=\"text\"\n        value={fromAddress}\n        onChange={(e) => setFromAddress(e.target.value)}\n        placeholder=\"Friend's Address\"\n      />\n      <button onClick={acceptFriendRequest}>Accept Request</button>\n      <button onClick={fetchUserData}>Fetch User Data</button>\n      {userData && (\n        <div>\n          <h2>User Data</h2>\n          <p>Name: {userData[0]}</p>\n          <p>Friend List: {userData[1].join(', ')}</p>\n          <p>Pending Requests: {userData[2].join(', ')}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}